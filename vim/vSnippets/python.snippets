
#===============================================================================
# python's code snippets of matplotlib
#===============================================================================
snippet mpl "matplotlib for python"
import matplotlib as ${1:mpl}
import matplotlib.pyplot as plt

# mpl.rcParams['font.family'] = 'Consolas'
# mpl.rcParams['font.family'] = 'DejaVu Sans'
# mpl.rcParams['font.size'] = 9

def on_key(event:$1.backend_bases.KeyEvent):
    if event.key == 'escape':
        plt.close()

fig = plt.figure('Plot')
fig.canvas.mpl_connect('key_press_event', on_key)
# ax = fig.add_subplot(1, 1, 1)
# ax = fig.add_axes((0.1, 0.1, 0.8, 0.8))
# ax.plot()
plt.show()
${0}
endsnippet

snippet mplt "matplotlib.pyplot for python"
import matplotlib as ${1:mpl}
import matplotlib.pyplot as plt

# mpl.rcParams['font.family'] = 'Consolas'
# mpl.rcParams['font.family'] = 'DejaVu Sans'
# mpl.rcParams['font.size'] = 9

def on_key(event:$1.backend_bases.KeyEvent):
    if event.key == 'escape':
        plt.close()

plt.figure('Plot')
plt.connect('key_press_event', on_key)
# plt.subplot(1, 1, 1)
# plt.axes((0.1, 0.1, 0.8, 0.8))
# plt.plot()
plt.show()
${0}
endsnippet

snippet mpl3d "matplotlib 3d for python"
import mpl_toolkits.mplot3d as plt3d

#ax = fig.add_subplot(111, projection='3d')
#ax.plot_wireframe(x, y, z)
#x, y = np.meshgrid(np.linespace(), np.arange())
#ax.plot_surface(x, y, z, shade=True, cmap='jet')
endsnippet

snippet mpy "pymovie make gif"
import moviepy.editor as mpy
from moviepy.video.io.bindings import mplfig_to_npimage

def make_frame(t):
    return mplfig_to_npimage(fig)

anim = mpy.VideoClip(make_frame, duration=1)
anim.write_videofile("m.mp4", fps=24)
anim.write_gif("m.gif", fps=24)
endsnippet

#===============================================================================
# ReStructuredText docstring style for python
#===============================================================================
snippet pfunc "python function"
"""${0:rst}
:Parameters:
:Returns:
:Raises:
"""
endsnippet

#===============================================================================
# doxygen style for python
#===============================================================================
snippet dmpage "doxygen mainpage"
@mainpage ${1:title}
#${0:markdown}
endsnippet

snippet dpage "doxygen page"
@page ${1:name} ${2:title}
${0:markdown}
endsnippet

snippet dspage "doxygen subpage"
@subpage ${1:name} "${2:text}"
endsnippet

snippet dfile "doxygen file"
@file ${0}
@brief

@date `!v strftime("%Y-%m-%d")`
@version
@author
@copyright
endsnippet

snippet dbrief "doxygen brief for class etc."
@brief ${0}
endsnippet

snippet dfunc "doxygen function"
@brief ${0}

@param None
@return
@retval None
endsnippet
