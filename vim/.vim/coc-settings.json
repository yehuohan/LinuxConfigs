{
    /* coc */
    "suggest.autoTrigger": "always",
    "suggest.enablePreview": true,
    "suggest.snippetIndicator": " ★",
    "suggest.echodocSupport": false,
    "diagnostic.enable": true,
    "diagnostic.level": "hint",
    "diagnostic.enableSign": true,
    "diagnostic.errorSign": "✘",
    "diagnostic.warningSign": "►",
    "diagnostic.infoSign": "►",
    "diagnostic.hintSign": "►",
    "diagnostic.messageTarget": "float",
    "diagnostic.virtualText": false,
    "diagnostic.virtualTextCurrentLineOnly": true,
    "diagnostic.virtualTextPrefix": "   ",
    "signature.enable": true,
    "coc.source.file.enable": true,
    "coc.source.file.ignoreHidden": false,
    "coc.preferences.extensionUpdateCheck": "weekly",
    "coc.preferences.enableFloatHighlight": true,
    "coc.preferences.rootPatterns": [".popc", ".git", ".svn", ".hg", "tags"],
    "coc.preferences.jumpCommand": "edit",
    "coc.preferences.snippets.enable": true,
    "list.nextKeymap": "<C-j>",
    "list.previousKeymap": "<C-k>",

    /* coc-lists(NOT in use) */
    //"session.saveOnVimLeave" : false,
    //"session.restartOnSessionLoad" : false,
    //"list.source.grep.command": "rg",

    /* coc-snippets */
    "snippets.ultisnips.enable": true,
    "snippets.ultisnips.directories": ["snips", "UltiSnips"],
    "snippets.snipmate.enable": false,

    /* coc-yank */
    "yank.highlight.enable": true,
    "yank.highlight.duration": 200,

    /* coc-explorer */
    "explorer.toggle": true,
    "explorer.width": 30,
    "explorer.sources": [{"name": "file", "expand": true}],
    "explorer.previewAction.onHover": false,
    "explorer.icon.expanded": "▾",
    "explorer.icon.collapsed": "▸",
    "explorer.file.diagnosticCountMax": 0,
    "explorer.file.autoReveal": true,
    "explorer.file.showHiddenFiles": true,
    "explorer.file.hiddenRules": {
        "extensions": ["o", "a", "obj", "pyc"],
        "filenames": [],
        "patternMatches": [
            "^\\."
        ]
    },
    "explorer.file.root.template": "[root] [fullpath]",
    "explorer.file.child.template": "[selection | clip | 1] [indent][icon | 1] [filename omitCenter 1][modified][readonly]",
    "explorer.file.child.labelingTemplate": "[fullpath][link][size][timeAccessed][timeModified][timeCreated][readonly][modified]",
    "explorer.file.column.indent.chars": " ",
    "explorer.file.column.indent.indentLine": false,
    "explorer.file.tabCD": false,
    "explorer.keyMappings" : {
        "j": "nodeNext",
        "k": "nodePrev",
        "J": "indentNext",
        "K": "indentPrev",
        "gk": "expandablePrev",
        "gj": "expandableNext",
        "h": false,
        "l": false,
        "gl": "expandRecursive",
        "gh": "collapseRecursive",
        "gd": "listDrive",
        "u": "gotoParent",
        "cd": "cd",

        "o": ["expandable?", ["expanded?", "collapse", "expand"], "open"],
        "O": "systemExecute",
        "e": false,
        "i": "open:vsplit",
        "s": "open:split",
        "t": "open:tab",
        "r": "refresh",
        "p": "preview:labeling",
        ".": "toggleHidden",

        "<C-n>": ["toggleSelection", "nodeNext"],
        "<C-p>": ["toggleSelection", "nodePrev"],
        "*": "toggleSelection",
        "<Tab>": "actionMenu",
        "a": "addFile",
        "A": "addDirectory",
        "R": "rename",
        "yy": "copyFilename",
        "Y": "copyFilepath",
        "C": "copyFile",
        "X": "cutFile",
        "P": "pasteFile",
        "D": "delete",
        "y": false, "c": false, "x": false, "d": false,

        "q": "quit",
        "?": "help"
    },

    /* coc-clangd */
    "clangd.enabled": true,
    "clangd.path": "clangd",

    /* coc-python */
    "python.autoComplete.extraPaths": [],

    /* coc-rls */
    "rust-client.channel": "nightly",
    "rust.unstable_features": true,
    "rust.all_features": true,

    /* lsp */
    "languageserver": {
        "julia": {
            "command": "julia",
            "args": [
                "--startup-file=no",
                "--history-file=no",
                "-e",
                "using LanguageServer;\n       using Pkg;\n       import StaticLint;\n       import SymbolServer;\n       env_path = dirname(Pkg.Types.Context().env.project_file);\n       debug = false;\n       server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict());\n       server.runlinter = true;\n       run(server);"
            ],
            "filetypes": ["julia"]
        }
    }
}
